
//Using Pair Class//

import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int T = sc.nextInt();

        while (T-- > 0) {
            int a = sc.nextInt();
            int b = sc.nextInt();
            int x1 = sc.nextInt();
            int y1 = sc.nextInt();
            int x2 = sc.nextInt();
            int y2 = sc.nextInt();

            Set<Pair> st1 = new HashSet<>();
            Set<Pair> st2 = new HashSet<>();
            int[] dx = {-1, 1, -1, 1};
            int[] dy = {-1, -1, 1, 1};

            for (int j = 0; j < 4; j++) {
                st1.add(new Pair(x1 + dx[j] * a, y1 + dy[j] * b));
                st1.add(new Pair(x1 + dx[j] * b, y1 + dy[j] * a));
                st2.add(new Pair(x2 + dx[j] * a, y2 + dy[j] * b));
                st2.add(new Pair(x2 + dx[j] * b, y2 + dy[j] * a));
            }

            int count = 0;
            for (Pair p : st1) {
                if (st2.contains(p)) {
                    count++;
                }
            }

            System.out.println(count);
        }

        sc.close();  // Close the scanner to avoid resource leaks
    }
}

class Pair {
    int x, y;

    Pair(int x, int y) {
        this.x = x;
        this.y = y;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        Pair pair = (Pair) o;
        return x == pair.x && y == pair.y;
    }

    @Override
    public int hashCode() {
        return 31 * x + y;
    }
}
